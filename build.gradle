buildscript {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/snapshot" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.4.0-SNAPSHOT"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
        classpath "org.ajoberstar:gradle-git:1.6.0"
    }
}

plugins {
    id "org.springframework.boot" version "2.4.0-SNAPSHOT"
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
    id "java"
}

ext {
    set('springCloudVersion', "2020.0.0-SNAPSHOT")
    set('lombokVersion', "1.18.16")
}

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://jitpack.io" }
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.ajoberstar.grgit"

    sourceCompatibility = "11"

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "org.springframework.boot:spring-boot-starter-logging"
        implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

        testImplementation "org.springframework.boot:spring-boot-starter-test"

        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
    }

    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }

        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }
}

task submodulesUpdate(type: Exec) {
    group 'Build Setup'
    description 'Updates (and inits) git submodules'
    println '>>> Get application.yml from git submodule'
    commandLine 'git', 'submodule', 'update', '--init', '--recursive'
}

task copyApiProperies(type: Copy) {
    group 'Build Setup'
    description 'Copy tecobrary-api module application.yml files to each modules'
    println '>>> Copy tecobrary-api module application.yml files to each modules'
    from "$rootDir/tecobrary-properties/tecobrary/api"
    include "*.yml"
    into "$rootDir/tecobrary-api/src/main/resources"
    dependsOn submodulesUpdate
}

task copyEventProcessorProperies(type: Copy) {
    group 'Build Setup'
    description 'Copy tecobrary-event-processor module application.yml files to each modules'
    println '>>> Copy tecobrary-event-processor module application.yml files to each modules'
    from "$rootDir/tecobrary-properties/tecobrary/eventprocessor"
    include "*.yml"
    into "$rootDir/tecobrary-event-processor/src/main/resources"
    dependsOn submodulesUpdate
}

task copyBatchProperies(type: Copy) {
    group 'Build Setup'
    description 'Copy tecobrary-batch module application.yml files to each modules'
    println '>>> Copy tecobrary-batch module application.yml files to each modules'
    from "$rootDir/tecobrary-properties/tecobrary/batch"
    include "*.yml"
    into "$rootDir/tecobrary-batch/src/main/resources"
    dependsOn submodulesUpdate
}

task copyCoreProperies(type: Copy) {
    group 'Build Setup'
    description 'Copy tecobrary-core module application.yml files to each modules'
    println '>>> Copy tecobrary-core module application.yml files to each modules'
    from "$rootDir/tecobrary-properties/tecobrary/core"
    include "*.yml"
    into "$rootDir/tecobrary-core/src/main/resources/config"
    dependsOn submodulesUpdate
}

task setupProperties {
    group 'Build Setup'
    description 'Setup application.yml files'
    dependsOn submodulesUpdate
    dependsOn copyApiProperies
    dependsOn copyBatchProperies
    dependsOn copyEventProcessorProperies
    dependsOn copyCoreProperies
}